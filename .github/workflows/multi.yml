name: multi

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

env:
    CARGO_TERM_COLOR: always

jobs:
    linux:
        runs-on: ubuntu-latest
        
        steps:
            -   name: checkout
                uses: actions/checkout@v2
                
            -   name: sshkey-install
                uses: shimataro/ssh-key-action@v2
                with:
                    key: ${{ secrets.RSA_ACTIONS_PRI }}
                    name: id_rsa
                    known_hosts: ${{ secrets.KNOWN_HOSTS }}
                    config: ${{ secrets.CONFIG }}
                    if_key_exists: fail
            
            -   name: init
                run: |
                    sudo chmod 777 /data/
                    cp -r $PWD/zero/devops/chord /data/
                    chmod 777 -R /data/chord/
                    cp ~/.ssh/id_rsa /data/chord/conf/id_rsa
                    find /data/chord/
                    echo "--------"
                    sudo apt-get update
                    sudo apt-get install curl
            
            
            -   name: build
                run: |
                    docker run --rm -it -v "$(pwd)":/home/rust/src  cargo --version
                    docker run --rm -it -v "$(pwd)":/home/rust/src -v ~/.cargo/git:/home/rust/.cargo/git -v ~/.cargo/registry:/home/rust    /.cargo/registry ekidd/rust-musl-builder cargo build --verbose --release
                    docker run --rm -it -v "$(pwd)":/home/rust/src -v ~/.cargo/git:/home/rust/.cargo/git -v ~/.cargo/registry:/home/rust    /.cargo/registry ekidd/rust-musl-builder cargo test  --verbose --release
            
            
            -   name: compose-boot
                run: |
                    docker-compose -f docker-compose.yml up -d
                    sleep 30
            
            
            -   name: compose-test
                run: |
                    curl -X GET "http://127.0.0.1:9200/_cat/indices?v"
            
            
            -   name: cmd-test
                run: |
                    ./target/x86_64-unknown-linux-musl/release/chord-cmd  -i/data/chord/job/input -o/data/chord/job/output
            
            
            -   name: web-boot
                run: |
                    ./target/x86_64-unknown-linux-musl/release/chord-web &
                    sleep 10
            
            
            -   name: web-test
                run: |
                    curl -X POST --location "http://127.0.0.1:9999/job/exec" \
                        -H "Content-Type: application/json" \
                        -d "{
                                \"git_url\": \"git@github.com:bit-ranger/chord.git\",
                                \"branch\": \"master\"
                            }"
                    sleep 30
                    tail -2000 /data/chord/job/output/web.log
            
            
            -   name: web-report
                run: |
                    curl -X GET --location "http://127.0.0.1:9200/chord@bit-ranger@github.com/_search" \
                        -H "Content-Type: application/json" \
                        -d "{
                            \"query\": {
                                  \"match\": {
                                        \"layer\": \"task\"
                                  }
                            }
                            }"
            
            -   name: upload
                uses: actions/upload-artifact@v2
                with:
                    name: linux-release
                    retention-days: 1
                    if-no-files-found: error
                    path: |
                        target/release/chord-cmd
                        target/release/chord-web
    
    
    
    docker:
        needs: linux
        runs-on: ubuntu-latest
        
        steps:
            -   name: checkout
                uses: actions/checkout@v2
            
            -   name: build
                run: docker build -f github.Dockerfile -t chord .
    
    
    
    windows:
        needs: linux
        runs-on: windows-latest
        
        steps:
            -   name: checkout
                uses: actions/checkout@v2
            
            -   name: build
                run: cargo build --verbose --release
            
            -   name: upload
                uses: actions/upload-artifact@v2
                with:
                    name: windows-release
                    retention-days: 1
                    if-no-files-found: error
                    path: |
                        target/release/chord-cmd.exe
                        target/release/chord-web.exe
    
    macos:
        needs: linux
        runs-on: macos-latest
        
        steps:
            -   name: checkout
                uses: actions/checkout@v2
            
            -   name: build
                run: cargo build --verbose --release
            
            -   name: upload
                uses: actions/upload-artifact@v2
                with:
                    name: macos-release
                    retention-days: 1
                    if-no-files-found: error
                    path: |
                        target/release/chord-cmd
                        target/release/chord-web
