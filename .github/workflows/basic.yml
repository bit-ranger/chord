name: basic

on:
    push:
        branches: [ dev ]


env:
    CARGO_TERM_COLOR: always

jobs:
    linux:
        
        runs-on: ubuntu-latest
        
        steps:
            -   name: checkout
                uses: actions/checkout@v2
            
            
            -   name: init
                run: |
                    sudo chmod 777 /data/
                    cp -r $PWD/zero/devops/chord /data/
                    chmod 777 -R /data/chord/
                    find /data/chord/
                    echo "------------------------------------------------"
                    sudo apt-get update
                    sudo apt-get install curl
            
            
            -   name: cache-target
                uses: actions/cache@v2
                with:
                    key: build-target-linux-musl-${{ hashFiles('Cargo.lock') }}
                    path: |
                        ./target
            
            
            -   name: build
                run: |
                    chmod -R 777 $PWD
                    docker run --rm -v "$(pwd)":/home/rust/src -v ~/.cargo:/home/rust/.cargo ekidd/rust-musl-builder cargo --version
                    docker run --rm -v "$(pwd)":/home/rust/src -v ~/.cargo:/home/rust/.cargo ekidd/rust-musl-builder  cargo build --verbose --release
                    docker run --rm -v "$(pwd)":/home/rust/src -v ~/.cargo:/home/rust/.cargo ekidd/rust-musl-builder  cargo test  --verbose --release
            
            
            -   name: compose-boot
                run: |
                    docker-compose -f docker-compose.yml up -d
                    sleep 30
            
            
            -   name: compose-test
                run: |
                    curl -X GET "http://127.0.0.1:9200/_cat/indices?v"
            
            
            -   name: dubbo
                run: |
                    cd action/src/action/dubbo/generic-gateway
                    mvn package
                    cp target/dubbo-generic-gateway-0.0.1-SNAPSHOT.jar /data/chord/bin/dubbo-generic-gateway-0.0.1-SNAPSHOT.jar
                    cd ../../../../..
                    pwd
                    echo "------------------------------------------------"
                    cd zero/action/dubbo
                    mvn package
                    java -jar target/dubbo-provider-0.0.1-SNAPSHOT.jar &
                    sleep 10
                    cd ../../..
                    pwd
                    echo "------------------------------------------------"
            
            
            -   name: cmd-test
                run: |
                    ./target/release/chord-cmd  -i/data/chord/job/input
            
            -   name: web-boot
                run: |
                    ./target/release/chord-web > web.out &
                    sleep 10
                    
            
            -   name: web-test
                run: |
                    curl -X POST --location "http://127.0.0.1:9999/job/exec" \
                       -H "Content-Type: application/json" \
                       -d "{
                               \"git_url\": \"git@github.com:bit-ranger/chord.git\",
                               \"branch\": \"master\"
                           }"
                    sleep 30
                    tail -2000 web.out
                    echo "------------------------------------------------" 
                    tail -2000 /data/chord/job/output/web.log
            
            
            -   name: web-report
                run: |
                    find /data/chord/job/output
    
    
    
    
    windows:
        needs: linux
        runs-on: windows-latest
        
        steps:
            -   name: checkout
                uses: actions/checkout@v2
            
            -   name: cache-target
                uses: actions/cache@v2
                with:
                    key: build-target-windows-msvc-${{ hashFiles('Cargo.lock') }}
                    path: |
                        ./target
            
            -   name: build
                run: cargo build --verbose --release
    
    
    macos:
        needs: linux
        runs-on: macos-latest
        
        steps:
            -   name: checkout
                uses: actions/checkout@v2
            
            -   name: cache-target
                uses: actions/cache@v2
                with:
                    key: build-target-apple-darwin--${{ hashFiles('Cargo.lock') }}
                    path: |
                        ./target
            
            -   name: build
                run: cargo build --verbose --release
